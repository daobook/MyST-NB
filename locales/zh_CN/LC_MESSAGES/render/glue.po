# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Executable Book Project
# This file is distributed under the same license as the MyST-NB package.
# xinetzone <xinzone@outlook.com>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MyST-NB \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-24 10:56+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../render/glue.md:9
msgid "Saving variables to embed (glue)"
msgstr ""

#: ../../render/glue.md:11
msgid ""
"The `glue` submodule allows you to store variables in the notebooks "
"outputs, by keys, then reference those keys to embed the outputs inline "
"of your text content.[^download]"
msgstr ""

#: ../../render/glue.md:17
msgid ""
"The `glue` roles and directives now only identify keys in the same "
"notebook, by default. To glue keys from other notebooks, see "
"{ref}`glue/crossdoc`."
msgstr ""

#: ../../render/glue.md:25
msgid "Save variables in code cells"
msgstr ""

#: ../../render/glue.md:27
msgid ""
"You can use `myst_nb.glue()` to assign the output of a variable to a key "
"of your choice. `glue` will store all of the information that is normally"
" used to display that variable (ie, whatever happens when you display the"
" variable by putting it at the end of a cell). Choose a key that you will"
" remember, as you will use it later."
msgstr ""

#: ../../render/glue.md:31
msgid "The following code glues a variable inside the notebook:"
msgstr ""

#: ../../render/glue.md:39
msgid "You can then insert it into your text like so: {glue}`my_variable`."
msgstr ""

#: ../../render/glue.md:41
msgid "That was accomplished with the following code: `` {glue}`my_variable` ``."
msgstr ""

#: ../../render/glue.md:43
msgid "Saving different variable types"
msgstr ""

#: ../../render/glue.md:45
msgid ""
"You can glue anything in your notebook and display it later with "
"`{glue}`. Here we'll show how to glue and paste **numbers and images**. "
"We'll simulate some data and run a simple bootstrap on it. We'll hide "
"most of this process below, to focus on the glueing part."
msgstr ""

#: ../../render/glue.md:67
msgid ""
"In the cell below, `data` contains our data, and `bootstrap_indices` is a"
" collection of sample indices in each bootstrap. Below we'll calculate a "
"few statistics of interest, and `glue()` them into the notebook."
msgstr ""

#: ../../render/glue.md:82
msgid ""
"By default, `glue` will display the value of the variable you are gluing."
" This is useful for sanity-checking its value at glue-time. If you'd like"
" to **prevent display**, use the `display=False` option. Note that below,"
" we also *overwrite* the value of `boot_chi` (but using the same value):"
msgstr ""

#: ../../render/glue.md:91
msgid ""
"You can also glue visualizations, such as matplotlib figures (here we use"
" `display=False` to ensure that the figure isn't plotted twice):"
msgstr ""

#: ../../render/glue.md:110
msgid "The same can be done for DataFrames (or other table-like objects) as well."
msgstr ""

#: ../../render/glue.md:119
msgid ""
"Since we are going to paste this figure into our document at a later "
"point, you may wish to remove the output here, using the `remove-output` "
"tag (see {ref}`use/removing`)."
msgstr ""

#: ../../render/glue.md:128
msgid "Embedding variables in the page"
msgstr ""

#: ../../render/glue.md:130
msgid ""
"Once you have glued variables into a notebook, you can then **paste** "
"those variables into your text in your book anywhere you like (even on "
"other pages). These variables can be pasted using one of the roles or "
"directives in the `glue:` *family*."
msgstr ""

#: ../../render/glue.md:136
msgid "The `glue` role/directive"
msgstr ""

#: ../../render/glue.md:138
msgid ""
"The simplest role and directive are `glue` (a.k.a. `glue:any`), which "
"paste the glued output inline or as a block respectively, with no "
"additional formatting. Simply add:"
msgstr ""

#: ../../render/glue.md:148
msgid ""
"For example, we'll paste the plot we generated above with the following "
"text:"
msgstr ""

#: ../../render/glue.md:155
msgid "Here's how it looks:"
msgstr ""

#: ../../render/glue.md:160
msgid "Or we can paste inline objects like so:"
msgstr ""

#: ../../render/glue.md:166
msgid "Inline text; {glue}`boot_mean`, and figure; {glue}`boot_fig`."
msgstr ""

#: ../../render/glue.md:169
msgid ""
"We recommend using wider, shorter figures when plotting in-line, with a "
"ratio around 6x2. For example, here's is an in-line figure of sorted "
"means from our bootstrap: {glue}`sorted_means_fig`. It can be used to "
"make a visual point that isn't too complex! For more ideas, check out "
"[how sparklines are used](https://en.wikipedia.org/wiki/Sparkline)."
msgstr ""

#: ../../render/glue.md:176
msgid ""
"Next we'll cover some more specific pasting functionality, which gives "
"you more control over how the outputs look in your pages."
msgstr ""

#: ../../render/glue.md:181
msgid "Controlling the output format"
msgstr ""

#: ../../render/glue.md:183
msgid ""
"You can control the pasted outputs by using a sub-command of `{glue}`. "
"These are called like so: `` {glue:subcommand}`key` ``. These subcommands"
" allow you to control more of the look, feel, and content of the pasted "
"output."
msgstr ""

#: ../../render/glue.md:188
msgid ""
"When you use `{glue}` you are actually using a short-hand for "
"`{glue:any}`. This is a generic command that doesn't make many "
"assumptions about what you are gluing."
msgstr ""

#: ../../render/glue.md:194
msgid "The `glue:text` role"
msgstr ""

#: ../../render/glue.md:196
msgid ""
"The `glue:text` role, is specific to `text/plain` outputs. For example, "
"the following text:"
msgstr ""

#: ../../render/glue.md:203
msgid "Is rendered as:"
msgstr ""

#: ../../render/glue.md:205
#, python-format
msgid ""
"The mean of the bootstrapped distribution was {glue:text}`boot_mean` (95%"
" confidence interval {glue:text}`boot_clo`/{glue:text}`boot_chi`)"
msgstr ""

#: ../../render/glue.md:208
msgid ""
"`glue:text` only works with glued variables that contain a `text/plain` "
"output."
msgstr ""

#: ../../render/glue.md:211
msgid ""
"With `glue:text` we can add formatting to the output, by specifying a "
"format spec string after a `:`: `` {glue:text}`mykey:<format_spec>` ``"
msgstr ""

#: ../../render/glue.md:213
msgid ""
"The `<format_spec>` should be a valid [Python format "
"specifier](https://docs.python.org/3/library/string.html#format-"
"specification-mini-language)."
msgstr ""

#: ../../render/glue.md:215
msgid ""
"This is particularly useful if you are displaying numbers and want to "
"round the results. For example, the following: ``My rounded mean: "
"{glue:text}`boot_mean:.2f` `` will be rendered like this:"
msgstr ""

#: ../../render/glue.md:218
msgid ""
"My rounded mean: {glue:text}`boot_mean:.2f` (95% CI: "
"{glue:text}`boot_clo:.2f`/{glue:text}`boot_chi:.2f`)."
msgstr ""

#: ../../render/glue.md:222
msgid "The `glue:figure` directive"
msgstr ""

#: ../../render/glue.md:224
msgid ""
"With `glue:figure` you can apply more formatting to figure like objects, "
"such as giving them a caption and referenceable label:"
msgstr ""

#: ../../render/glue.md:227
msgid "`glue:figure` directive options"
msgstr ""

#: ../../render/glue.md:256
msgid ""
"This is a **caption**, with an embedded `{glue:text}` element: "
"{glue:text}`boot_mean:.2f`!"
msgstr ""

#: ../../render/glue.md:263
msgid "Here is a {ref}`reference to the figure <fig-boot>`"
msgstr ""

#: ../../render/glue.md:267
msgid "Here's a table:"
msgstr ""

#: ../../render/glue.md:282
msgid "A caption for a pandas table."
msgstr ""

#: ../../render/glue.md:287
msgid "The `glue:math` directive"
msgstr ""

#: ../../render/glue.md:289
msgid ""
"The `glue:math` directive, is specific to latex math outputs (glued "
"variables that contain a `text/latex` mimetype), and works similarly to "
"the [sphinx math directive](https://www.sphinx-"
"doc.org/en/1.8/usage/restructuredtext/directives.html#math)."
msgstr ""

#: ../../render/glue.md:293
msgid "`glue:math` directive options"
msgstr ""

#: ../../render/glue.md:303 ../../render/glue.md:322
msgid ""
"\\displaystyle \\left(\\sqrt{5} i\\right)^{\\alpha} \\left(\\frac{1}{2} -"
" \\frac{2 \\sqrt{5} i}{5}\\right) + \\left(- \\sqrt{5} "
"i\\right)^{\\alpha} \\left(\\frac{1}{2} + \\frac{2 \\sqrt{5} "
"i}{5}\\right)"
msgstr ""

#: ../../render/glue.md:320
msgid "Insert the equation here:"
msgstr ""

#: ../../render/glue.md:326
msgid "Which we reference as Equation {eq}`eq-sym`."
msgstr ""

#: ../../render/glue.md:329
msgid ""
"`glue:math` only works with glued variables that contain a `text/latex` "
"output."
msgstr ""

#: ../../render/glue.md:332
msgid "The `glue:md` role/directive"
msgstr ""

#: ../../render/glue.md:334
msgid ""
"With `glue:md`, you can output `text/markdown`, that will be integrated "
"into your page."
msgstr ""

#: ../../render/glue.md:354
msgid "The format of the markdown can be specified as:"
msgstr ""

#: ../../render/glue.md:356
msgid ""
"`commonmark` (default): Restricted to the [CommonMark "
"specification](https://commonmark.org/)."
msgstr ""

#: ../../render/glue.md:357
msgid ""
"`gfm`: Restricted to the [GitHub-flavored "
"markdown](https://github.github.com/gfm/)."
msgstr ""

#: ../../render/glue.md:358
msgid ""
"Note, this requires the installation of the [linkify-it-py "
"package](https://pypi.org/project/linkify-it-py)"
msgstr ""

#: ../../render/glue.md:359
msgid "`myst`: The MyST parser configuration for the the current document."
msgstr ""

#: ../../render/glue.md:361
msgid ""
"For example, the following role/directive will glue inline/block MyST "
"Markdown, as if it was part of the original document."
msgstr ""

#: ../../render/glue.md:371
msgid "Here is some {glue:md}`inline_md:myst`!"
msgstr ""

#: ../../render/glue.md:375
msgid "A heading"
msgstr ""

#: ../../render/glue.md:377
msgid "Then some text, and anything nested."
msgstr ""

#: ../../render/glue.md:380
msgid "Embedding outputs from other pages"
msgstr ""

#: ../../render/glue.md:382
msgid ""
"Certain `glue` roles and directives can be used to paste content from "
"other notebooks, by specifying the (relative) path to them."
msgstr ""

#: ../../render/glue.md:386
msgid ""
"Sometimes you'd like to use variables from notebooks that are not meant "
"to be shown to users. In this case, you should bundle the notebook with "
"the rest of your content pages, but include `orphan: true` in the "
"metadata of the notebook."
msgstr ""

#: ../../render/glue.md:390
msgid ""
"For example, the following example pastes glue variables from {ref"
"}`orphaned-nb`:"
msgstr ""

#: ../../render/glue.md:403
msgid "A cross-pasted `any` role: {glue}`orphaned_nb.ipynb::var_text`"
msgstr ""

#: ../../render/glue.md:404
msgid "A cross-pasted `text` role: {glue:text}`orphaned_nb.ipynb::var_float:.2E`"
msgstr ""

#: ../../render/glue.md:406
msgid "A cross-pasted `any` directive:"
msgstr ""

#: ../../render/glue.md:414
msgid "Advanced use-cases"
msgstr ""

#: ../../render/glue.md:416
msgid "Here are a few more specific and advanced uses of the `glue` submodule."
msgstr ""

#: ../../render/glue.md:418
msgid "Embedding into tables"
msgstr ""

#: ../../render/glue.md:420
msgid ""
"In addition to pasting blocks of outputs, or in-line with text, you can "
"also paste directly into tables. This allows you to compose complex "
"collections of structured data using outputs that were generated in other"
" notebooks. For example the following table:"
msgstr ""

#: ../../render/glue.md:431
msgid "Results in:"
msgstr ""

#: ../../render/glue.md:408
msgid "name"
msgstr ""

#: ../../render/glue.md:408
msgid "plot"
msgstr ""

#: ../../render/glue.md:408
msgid "mean"
msgstr ""

#: ../../render/glue.md:408
msgid "ci"
msgstr ""

#: ../../render/glue.md:408
msgid "histogram and raw text"
msgstr ""

#: ../../render/glue.md:408
msgid "{glue}`boot_fig`"
msgstr ""

#: ../../render/glue.md:408
msgid "{glue}`boot_mean`"
msgstr ""

#: ../../render/glue.md:408
msgid "{glue}`boot_clo`-{glue}`boot_chi`"
msgstr ""

#: ../../render/glue.md:408
msgid "sorted means and formatted text"
msgstr ""

#: ../../render/glue.md:408
msgid "{glue}`sorted_means_fig`"
msgstr ""

#: ../../render/glue.md:408
msgid "{glue:text}`boot_mean:.3f`"
msgstr ""

#: ../../render/glue.md:408
msgid "{glue:text}`boot_clo:.3f`-{glue:text}`boot_chi:.3f`"
msgstr ""

#: ../../render/glue.md:14
msgid ""
"This notebook can be downloaded as **{nb-download}`glue.ipynb`** and "
"{download}`glue.md`"
msgstr ""

